import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import { GetServerSideProps } from "next";
import Footer from "@/componentes/Footer";
import {
  Box,
  Button,
  Container,
  CssBaseline,
  Divider,
  Grid,
  List,
  ListItem,
  Paper,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  TextField,
  Typography,
  useTheme,
} from "@mui/material";
import SwipeableTemporaryDrawer from "@/componentes/Layout";
import Header from "@/componentes/Header";
import { Stack } from "@mui/system";
import { IClientes } from "@/interfaces/clientes.interface";
import { connection } from "@/api";
import { MenuLateral } from "@/componentes/MenuLateral";

const inter = Inter({ subsets: ["latin"] });

export default function Home(cliente: any) {

  const theme = useTheme();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <CssBaseline />
      <Container
        maxWidth="xl"
        sx={{
          height: "100vh",
          width: "100vw",
          display: "flex",
          flexDirection: "column",
        }}
      >
        <Header />
        <MenuLateral />
        <List>
          {cliente?.cliente.map((row: IClientes) => (
            <div key={row.id}>
              <ListItem sx={{ display: "flex", justifyContent: "space-between" }}>
                <Box color={theme.palette.primary.dark} >
                  <Typography variant="h6">ID</Typography>
                  <Typography>{row.id}</Typography>
                </Box>
                <Box><Typography>nome:</Typography><Typography>{row.nome}</Typography></Box>
                <Box><Typography>tipoDocumento:</Typography><Typography>{row.tipoDocumento}</Typography></Box>
                <Box><Typography>numeroDocumento:</Typography><Typography>{row.numeroDocumento}</Typography></Box>
                <Box><Typography>logradouro:</Typography><Typography>{row.logradouro}</Typography></Box>
                <Box><Typography>numero:</Typography><Typography>{row.numero}</Typography></Box>
              </ListItem >
              <Divider />
            </div>
          ))}
        </List>

      </Container >
      <Footer />
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const cli = await connection.get("/Cliente");
  const cliente = await cli.data;
  const cond = await connection.get("/Condutor");
  const condutor = await cond.data;
  const desloc = await connection.get("/Deslocamento");
  const deslocamento = await desloc.data;
  const veic = await connection.get("/Veiculo");
  const veiculo = await veic.data;
  const weather = await connection.get("/WeatherForecast");
  const weatherForCast = await weather.data;

  return { props: { cliente, condutor, deslocamento, veiculo, weatherForCast } };
};
